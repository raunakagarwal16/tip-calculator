{"version":3,"sources":["body.js","App.js","index.js"],"names":["Body","useState","billAmount","setBillAmount","noOfPeople","setNoOfPeople","tipOutput","setTipOutput","customInput","setCustomInput","customTip","totalOutput","btnHandler","percentValue","className","htmlFor","type","min","id","value","onChange","e","target","onClick","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"4OA6IeA,EAzIF,WACX,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAqBMC,EAAY,WAEhBH,EAAaI,GAAeH,EAAc,OAEtCI,EAAa,SAACC,GAClBN,EAAaI,GAAeE,EAAe,OAevCF,EAAcT,EAAaE,EAMjC,OACE,sBAAKU,UAAU,OAAf,UACE,yCACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,uBAAOC,QAAQ,OAAf,kBACA,uBACEC,KAAK,SACLC,IAAI,IACJC,GAAG,OACHJ,UAAU,YACVK,MAAOjB,EACPkB,SA1DgB,SAACC,GAC3BlB,EAAckB,EAAEC,OAAOH,aA4DjB,gCACE,6CACA,sBAAKL,UAAU,kBAAf,UACE,wBAAQA,UAAU,SAASS,QAAS,kBAAMX,EAAW,IAArD,gBAGA,wBAAQE,UAAU,SAASS,QAAS,kBAAMX,EAAW,KAArD,iBAGA,wBAAQE,UAAU,SAASS,QAAS,kBAAMX,EAAW,KAArD,iBAGA,wBAAQE,UAAU,SAASS,QAAS,kBAAMX,EAAW,KAArD,iBAGA,wBAAQE,UAAU,SAASS,QAAS,kBAAMX,EAAW,KAArD,iBAGA,uBACEE,UAAU,SACVK,MAAOX,EACPY,SA3Ea,SAACC,GAC1BZ,EAAeY,EAAEC,OAAOH,OAExBK,QAAQC,IAAIjB,YA4EN,gCACE,uBAAOO,QAAQ,SAAf,8BACA,uBACEC,KAAK,SACLC,IAAI,IACJE,MAAOf,EACPc,GAAG,SACHE,SA1Fa,SAACC,GACxBhB,EAAcgB,EAAEC,OAAOH,OACvBT,OA0FQ,wBAAQI,UAAU,SAASS,QAASb,EAApC,yBAMJ,sBAAKI,UAAU,kBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,gCACE,mBAAGA,UAAU,UAAb,wBACA,mBAAGA,UAAU,QAAb,wBAEF,qBAAKA,UAAU,UAAf,SACGR,EAAY,EAAIA,EAAY,gBAGjC,sBAAKQ,UAAU,SAAf,UACE,gCACE,mBAAGA,UAAU,UAAb,0BACA,mBAAGA,UAAU,QAAb,wBAGF,qBAAKA,UAAU,UAAf,SACGH,EAAc,EAAIA,EAAc,gBAGrC,wBAAQG,UAAU,QAAQS,QA7Gb,WACnBhB,EAAa,IACbJ,EAAc,IACdE,EAAc,IACdI,EAAe,KAyGT,6BCzHKiB,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCANa,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,U","file":"static/js/main.79f42359.chunk.js","sourcesContent":["import { div } from \"prelude-ls\";\r\nimport { useState } from \"react\";\r\nimport \"./body.css\";\r\n\r\nconst Body = () => {\r\n  const [billAmount, setBillAmount] = useState(0);\r\n  const [noOfPeople, setNoOfPeople] = useState(0);\r\n\r\n  const [tipOutput, setTipOutput] = useState(\"\");\r\n  const [customInput, setCustomInput] = useState(\"\");\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setBillAmount(e.target.value);\r\n  };\r\n  const noOfPEopleChange = (e) => {\r\n    setNoOfPeople(e.target.value);\r\n    customTip();\r\n  };\r\n  const customInputHandler = (e) => {\r\n    setCustomInput(e.target.value);\r\n\r\n    console.log(customInput);\r\n  };\r\n  const resetHandler = () => {\r\n    setTipOutput(\"\");\r\n    setBillAmount(\"\");\r\n    setNoOfPeople(\"\");\r\n    setCustomInput(\"\");\r\n  };\r\n\r\n  const customTip = () => {\r\n    // if (customInput !== \"\") {\r\n    setTipOutput(totalOutput * (customInput / 100));\r\n  };\r\n  const btnHandler = (percentValue) => {\r\n    setTipOutput(totalOutput * (percentValue / 100));\r\n  };\r\n\r\n  //     const totalOutput = ()=> {\r\n\r\n  //         if( billAmount = '' || noOfPeople === '') {\r\n  //             return 0;\r\n  //             ;\r\n  //         }\r\n  //         else {\r\n  // return billAmount/noOfPeople\r\n\r\n  //         }\r\n\r\n  //     }\r\n  const totalOutput = billAmount / noOfPeople;\r\n\r\n  // billAmount/noOfPeople\r\n\r\n  //   if\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <h2>Spliter</h2>\r\n      <div className=\"box\">\r\n        <div className=\"Container\">\r\n          <div className=\"bill-container\">\r\n            <label htmlFor=\"bill\">Bill</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              id=\"bill\"\r\n              className=\"inputBill\"\r\n              value={billAmount}\r\n              onChange={amountChangeHandler}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p>Select Tip %</p>\r\n            <div className=\"buttonContainer\">\r\n              <button className=\"button\" onClick={() => btnHandler(5)}>\r\n                5%\r\n              </button>\r\n              <button className=\"button\" onClick={() => btnHandler(10)}>\r\n                10%\r\n              </button>\r\n              <button className=\"button\" onClick={() => btnHandler(15)}>\r\n                15%\r\n              </button>\r\n              <button className=\"button\" onClick={() => btnHandler(25)}>\r\n                25%\r\n              </button>\r\n              <button className=\"button\" onClick={() => btnHandler(50)}>\r\n                50%\r\n              </button>\r\n              <input\r\n                className=\"custom\"\r\n                value={customInput}\r\n                onChange={customInputHandler}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"people\">Number of People</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={noOfPeople}\r\n              id=\"people\"\r\n              onChange={noOfPEopleChange}\r\n            />\r\n            <button className=\"button\" onClick={customTip}>\r\n              check\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"outputContainer\">\r\n          <div className=\"output\">\r\n            <div>\r\n              <p className=\"content\">Tip Amount</p>\r\n              <p className=\"light\">/person</p>\r\n            </div>\r\n            <div className=\"display\">\r\n              {tipOutput > 0 ? tipOutput : \"rs 00.00\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"output\">\r\n            <div>\r\n              <p className=\"content\">person Total</p>\r\n              <p className=\"light\">/person</p>\r\n            </div>\r\n\r\n            <div className=\"display\">\r\n              {totalOutput > 0 ? totalOutput : \"rs 00.00\"}\r\n            </div>\r\n          </div>\r\n          <button className=\"reset\" onClick={resetHandler}>\r\n            reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import \"./App.css\";\nimport Body from \"./body\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Body></Body>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}